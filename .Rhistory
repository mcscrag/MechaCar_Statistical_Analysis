ggplot(mtcars,aes(x=wt)) + geom_density() #visualize distribution using density plot
library(jsonlite)
library(tidyverse)
ggplot(mtcars,aes(x=wt)) + geom_density() #visualize distribution using density plot
?shapiro.test()
shapiro.test(mtcars$wt)
?sample_n()
setwd("~/R_Analysis/01_Demo")
population_table <- read.csv('used_car_data.csv',check.names = F,stringsAsFactors = F) #import used car dataset
plt <- ggplot(population_table,aes(x=log10(Miles_Driven))) #import dataset into ggplot2
plt + geom_density() #visualize distribution using density plot
sample_table <- population_table %>% sample_n(50) #randomly sample 50 data points
plt <- ggplot(sample_table,aes(x=log10(Miles_Driven))) #import dataset into ggplot2
plt + geom_density() #visualize distribution using density plot
?t-test()
?t.test()
t.test(log10(sample_table$Miles_Driven),mu=mean(log10(population_table$Miles_Driven))) #compare sample versus population means
sample_table <- population_table %>% sample_n(50) #generate 50 randomly sampled data points
sample_table2 <- population_table %>% sample_n(50) #generate another 50 randomly sampled data points
t.test(log10(sample_table$Miles_Driven),log10(sample_table2$Miles_Driven)) #compare means of two samples
mpg_data <- read.csv('mpg_modified.csv') #import dataset
mpg_1999 <- mpg_data %>% filter(year==1999) #select only data points where the year is 1999
mpg_2008 <- mpg_data %>% filter(year==2008) #select only data points where the year is 2008
t.test(mpg_1999$hwy,mpg_2008$hwy,paired = T) #compare the mean difference between two samples
?aov()
mtcars_filt <- mtcars[,c("hp","cyl")] #filter columns from mtcars dataset
mtcars_filt$cyl <- factor(mtcars_filt$cyl) #convert numeric column to factor
aov(hp ~ cyl,data=mtcars_filt) #compare means across multiple levels
summary(aov(hp ~ cyl,data=mtcars_filt))
head(mtcars)
plt <- ggplot(mtcars,aes(x=hp,y=qsec)) #import dataset into ggplot2
plt + geom_point() #create scatter plot
cor(mtcars$hp,mtcars$qsec) #calculate correlation coefficient
used_cars <- read.csv('used_car_data.csv',stringsAsFactors = F) #read in dataset
head(used_cars)
plt <- ggplot(used_cars,aes(x=Miles_Driven,y=Selling_Price)) #import dataset into ggplot2
plt + geom_point() #create a scatter plot
cor(used_cars$Miles_Driven,used_cars$Selling_Price) #calculate correlation coefficient
used_matrix <- as.matrix(used_cars[,c("Selling_Price","Present_Price","Miles_Driven")]) #convert data frame into numeric matrix
cor(used_matrix)
lm(qsec ~ hp,mtcars) #create linear model
summary(lm(qsec~hp,mtcars)) #summarize linear model
model <- lm(qsec ~ hp,mtcars) #create linear model
yvals <- model$coefficients['hp']*mtcars$hp +
model$coefficients['(Intercept)'] #determine y-axis values from linear model
plt <- ggplot(mtcars,aes(x=hp,y=qsec)) #import dataset into ggplot2
plt + geom_point() + geom_line(aes(y=yvals), color = "red") #plot scatter and linear model
lm(qsec ~ mpg + disp + drat + wt + hp,data=mtcars) #generate multiple linear regression model
lm(qsec ~ mpg + disp + drat + wt + hp,data=mtcars) #generate multiple linear regression model
summary(lm(qsec ~ mpg + disp + drat + wt + hp,data=mtcars)) #generate summary statistics
table(mpg$class,mpg$year) #generate contingency table
tbl <- table(mpg$class,mpg$year) #generate contingency table
chisq.test(tbl) #compare categorical distributions
setwd("~/R_Analysis/module_16_challenge")
library(tidyverse)
library(dplyr)
mechacar_df <- read.csv('MechaCar_mpg.csv',stringsAsFactors = F)
View(mechacar_df)
lm(mpg ~ vehicle_length + vehicle_weight + spoiler_angle + ground_clearance + AWD,data=mechacar_df) #generate multiple linear regression model
summary(lm(mpg ~ vehicle_length + vehicle_weight + spoiler_angle + ground_clearance + AWD,data=mechacar_df))
View(mtcars_filt)
suspension_df <- read.csv('Suspension_Coil.csv',stringsAsFactors = F)
View(suspension_df)
?summarize()
suspension_summary <- suspension_df %>% summarize(Mean=mean(PSI), Median=median(PSI), Variance=variance(PSI), SD=sd(PSI))
suspension_summary <- suspension_df %>% summarize(Mean=mean(PSI), Median=median(PSI), Variance=var(PSI), SD=sd(PSI))
View(suspension_summary)
total_summary <- suspension_df %>% summarize(Mean=mean(PSI), Median=median(PSI), Variance=var(PSI), SD=sd(PSI))
lot_summary <- suspension_df %>% group_by(Manufacturing_Lot) %>% summarize(Mean=mean(PSI), Median=median(PSI), Variance=var(PSI), SD=sd(PSI))
View(lot_summary)
t.test(suspension_df$PSI,mu=mean(suspension_df$PSI))
t.test(suspension_df$PSI,mu=1500)
?t.test()
?subset()
t.tast(suspension_df$PSI,mu=1500,subset(suspension_df$PSI, Manufacturing_Lot = 'Lot1'))
t.test(suspension_df$PSI,mu=1500,subset(suspension_df$PSI, Manufacturing_Lot = 'Lot1'))
t.test(suspension_df$PSI,mu=1500,subset(suspension_df$PSI,Manufacturing_Lot = 'Lot1'))
t.test(suspension_df$PSI,mu=1500,subset(Manufacturing_Lot = 'Lot1'))
?t,test()
t.test(suspension_df$PSI,mu=1500,subset = Manufacturing_Lot == 'Lot1')
t.test(suspension_df$PSI,mu=1500,subset = Manufacturing_Lot == 'Lot2')
t.test(suspension_df$PSI,mu=1500,subset = Manufacturing_Lot == 'Lot3')
?t.test()
t.test(suspension_df$PSI,mu=1500, subset(Manufacturing_Lot == 'Lot1'))
t.test(suspension_df$PSI,mu=1500, subset(suspension_df$Manufacturing_Lot, Manufacturing_Lot == 'Lot1'))
?subset()
t.test(suspension_df$PSI,mu=1500, subset(suspension_df, Manufacturing_Lot == 'Lot1'))
t.test(suspension_df$PSI,mu=1500, subset(suspension_df, Manufacturing_Lot == 'Lot1'))
t.test(suspension_df$PSI,mu=1500, subset(suspension_df, Manufacturing_Lot == 'Lot1', drop = FALSE))
?t.test()
t.test(suspension_df$PSI,mu=1500, subset(suspension_df$Manufacturing_Lot, Manufacturing_Lot == 'Lot1', drop = FALSE))
lot1 <- suspension_df$PSI[suspension_df$Manufacturing_Lot == 'Lot1']
t.test(lot1,mu=1500)
lot1 <- suspension_df$PSI[suspension_df$Manufacturing_Lot == 'Lot1']
lot2 <- suspension_df$PSI[suspension_df$Manufacturing_Lot == 'Lot2']
lot3 <- suspension_df$PSI[suspension_df$Manufacturing_Lot == 'Lot3']
t.test(lot2,mu=1500)
t.test(lot3,mu=1500)
t.test(lot1,mu=1500)
t.test(lot2,mu=1500)
t.test(lot3,mu=1500)
